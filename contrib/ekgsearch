#!/usr/bin/perl
# $Id$
# skrypt do szukania osób w katalogu publicznym GG
#  na podstawie opisu ekg-20020705/docs/html.txt [1]
# (C) Piotr Wysocki, wysek@linux.bydg.org, http://wysek.thanedd.sk

# Ró¿nice miêdzy opisem [1] a moim skryptem:
# 1) cyfra statusu: 1-niedostêpny, 2-dostêpny, 3-zajêty
# 2) pole NextStart w odpowiedzi wystêpuje, gdy ilo¶æ pasuj±cych rekordów > 20
# i wynosi ono 0 :), wcze¶niej biorê poprostu jako start ostatni UIN z
# poprzedniej listy rekordów

# TODO:
# - doj¶æ do tego, jakie cyfry statusu co oznaczaj± (nie mam pewno¶ci)
# - u¿yæ modu³u Net::HTTP (?)

use IO::Socket;

my $host = "pubdir.gadu-gadu.pl";
my $path = "/appsvc/fmpubquery2.asp";

my ($mode, $uin, $first, $last, $nick, $city, $born1) = undef;
my ($born2, $phone, $email, $active, $gender, $start) = undef;
my ($all, $nextstart, $lastuin) = undef;
my $debug = undef; # to be removed

# wczytanie parametrów
usage() unless (@ARGV);
for ($i=0;$i<=$#ARGV;$i+=2)
{
	usage()
		if (($ARGV[$i] eq "-h") || ($ARGV[$i] eq "--help"));
	if ($i < $#ARGV)
	{	if (($ARGV[$i] eq "-u") || ($ARGV[$i] eq "--uin"))
		{
			usage() if (defined $uin);
			$mode = 3;
			$uin = $ARGV[$i+1];
			next;
		}
		if (($ARGV[$i] eq "-s") || ($ARGV[$i] eq "--start"))
		{
			usage() if (defined $start);
			$start = $ARGV[$i+1];
			next;
		}
		if (($ARGV[$i] eq "-f") || ($ARGV[$i] eq "--first"))
		{
			usage() if (defined $first);
			$first = $ARGV[$i+1];
			next;
		}
		if (($ARGV[$i] eq "-l") || ($ARGV[$i] eq "--last"))
		{
			usage() if (defined $last);
			$last = $ARGV[$i+1];
			next;
		}
		if (($ARGV[$i] eq "-n") || ($ARGV[$i] eq "--nick"))
		{
			usage() if (defined $nick);
			$nick = $ARGV[$i+1];
			next;
		}
		if (($ARGV[$i] eq "-c") || ($ARGV[$i] eq "--city"))
		{
			usage() if (defined $city);
			$city = $ARGV[$i+1];
			next;
		}
		if (($ARGV[$i] eq "-b") || ($ARGV[$i] eq "--born"))
		{
			usage() if (defined $born1);
			@born = split(/:/,$ARGV[$i+1]);
			$born1 = @born[0];
			$born2 = @born[1];
			usage() if ($born1 > $born2);
			next;
		}
		if (($ARGV[$i] eq "-p") || ($ARGV[$i] eq "--phone"))
		{
			usage() if (defined $phone);
			$phone = $ARGV[$i+1];
			next;
		}
		if (($ARGV[$i] eq "-e") || ($ARGV[$i] eq "--email"))
		{
			usage() if (defined $email);
			$email = $ARGV[$i+1];
			next;
		}
	}
	if (($ARGV[$i] eq "-a") || ($ARGV[$i] eq "--active"))
	{
		usage() if (defined $active);
		$active = 1;
		$i--;
		next;
	}
	if (($ARGV[$i] eq "-F") || ($ARGV[$i] eq "--female"))
	{
		usage() if (defined $sex);
		$sex = 1;
		$i--;
		next;
	}
	if (($ARGV[$i] eq "-M") || ($ARGV[$i] eq "--male"))
	{
		usage() if (defined $sex);
		$sex = 2;
		$i--;
		next;
	}
	if ($ARGV[$i] eq "--debug")
	{
		usage() if (defined $debug);
		$debug = 1;
		$i--;
		next;
	}
	if ($ARGV[$i] eq "--all")
	{
		usage() if (defined $all);
		$all = 1;
		$i--;
		next;
	}
	usage();
}

again:
$start = $nextstart if (defined $nextstart);
$nextstart = undef;

$sock = IO::Socket::INET->new(PeerAddr => $host,
				PeerPort => 80,
				Proto => "tcp")
				or die "Nieudana próba po³±czenia: $!\n";
$length = length("Mode=&UserId=&start=") + length($start);
$tosend = "POST $path HTTP/1.0\r\nHost: $host\r\nContent-Type: application/x-www-form-urlencoded\r\nUser-Agent: Mozilla/4.0 (compatible; MSIE 5.0; Windows 98)\r\nContent-Length: ";
if ($mode == 3)
{
	$content = "Mode=$mode&UserId=$uin";
	$content .= "&start=$start" if (defined $start);
} else
{
	$sex = -1 unless $sex;
	$born1 = 0 unless $born1;
	$born2 = 0 unless $born2;
	$mode = 0;
	map { s/ /%20/g } $first,$last,$nick,$city,$phone,$email;
	$content = "Mode=$mode&FirstName=$first&LastName=$last&NickName=$nick&Gender=$sex&City=$city&MinBirth=$born1&MaxBirth=$born2";
	$content .= "&ActiveOnly=$active" if (defined $active);
	$content .= "&start=$start" if (defined $start);
}
$tosend .= length($content) . "\r\nPragma: nocache\r\n\r\n" . $content;
$tosend =~ tr/¡±¦¶¬¼/\xa5\xb9\x8c\x9c\x8f\x9f/; # cp_to_iso
$sock->print($tosend);
$in = <$sock>;
if (! $in =~ /HTTP\/1\.[01] 200 OK/)
{
	print "B³±d, otrzyma³em: $in";
	exit;
}
# ommit the header
while (<$sock>)
{
	s/\r\n//;
	last if /^$/;
}
$in = <$sock>;
$in =~ s/\r\n//;
if (! $in =~ /^query_results:$/)
{
	print "B³±d, otrzyma³em: \"$in\" zamiast \"query_results:\"\n";
	exit;
}
for ($i=0;<$sock>;$i++)
{
	s/\r\n//;
	if (/^NextStart:[0-9]+$/)
	{
		s/^NextStart://;
		if ($_ == 0)
		{
			printf("koniec danych (NextStart:0)\n") if (defined $debug);
			exit;
		}
		$nextstart = $_;
		last;
	}
	if (/^1$/) { $status = "n"; }
	elsif (/^2$/) { $status = "d"; }
	elsif (/^3$/) { $status = "z"; }
	else { $sock->close(); exit 1; }
	$status = $_ if (defined $debug);
	# $ruin - received_uin, ...
	foreach $data ($ruin,$rname,$rsurname,$rnick,$ryear,$rsex,$rcity)
	{
		$data = <$sock>;
		$data =~ s/\r\n//;
		$data =~ tr/\xa5\xb9\x8c\x9c\x8f\x9f/¡±¦¶¬¼/; # iso_to_cp
	}
	if ($lastuin == $ruin)
	{
		printf("$lastuin == $ruin..\n") if (defined $debug);
		$sock->close();
		exit;
	}
	$lastuin = $ruin;
	if ($rsex =~ /^1$/) { $rsex = "k"; }
	elsif ($rsex =~ /^2$/) { $rsex = "m"; }
	else { $rsex = " "; }
	printf ("%s | %9d | %20.20s | %12.12s | %4d | %s | %15.15s\n",$status,
		$ruin,$rname . " " . $rsurname,$rnick,$ryear,$rsex,$rcity);
}
$sock->close();
$nextstart = $ruin unless $nextstart;
goto again if ($i > 19 && defined $all);

if (defined $debug)
{
	printf("koniec danych\n") if ($i <= 19);
	printf("brak opcji --all\n") if (! defined $all);
}
exit;

sub usage
{
	print "U¿ycie: $0 [opcje]\n";
	print "\t-u, --uin <numerek>\n";
	print "\t-f, --first <imiê>\n";
	print "\t-l, --last <nazwisko>\n";
	print "\t-n, --nick <pseudonim>\n";
	print "\t-c, --city <miasto>\n";
	print "\t-b, --born <min:max>\n";
	print "\t-p, --phone <telefon>\n";
	print "\t-e, --email <e-mail>\n";
	print "\t-a, --active\n";
	print "\t-F, --female\n";
	print "\t-M, --male\n";
	print "\t-s, --start <od>\n";
	print "\t--all\n";
	print "\t--debug\n";
	exit;
}


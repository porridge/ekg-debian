od 20020627 ekg jest przygotowane do obs³ugi ró¿nych interfejsów u¿ytkowika.
zrobi³em ca³kiem spor± reorganizacjê kodu, dziêki czemu nie trzeba bêdzie
psuæ zbyt du¿o, ¿eby dodaæ frontend w ncurses czy jakikolwiek inny.

je¶li kto¶ chce napisaæ w³asny interfejs (chocia¿by w gtk+, chocia¿ nie
wiem po co, skoro jest GNU Gadu -- http://gadu.gnu.pl/), musi napisaæ
ui-costam.c, zawieraj±cy poni¿ej podane funkcje i dopisaæ parê linijek
do ekg.c.

ui_costam_init()
	inicjalizacja interfejsu u¿ytkownika. dla ui-readline bêdzie to
	ustawienie wszystkich zmiennych. dla ui-ncurses pewnie jakie¶
	initscr(), przygotowanie okienek itd. nale¿y przypisaæ zmiennym
	ui_post_init, ui_deinit, ui_print, ui_event, ui_loop, ui_beep
	adresy funkcji danego interfejsu. nawet je¶li funkcja nic nie robi,
	musi byæ zdefiniowana. zmiennym tym NIE WOLNO przypisaæ warto¶ci
	NULL. nale¿y te¿ utrzymywaæ w zmiennych ui_screen_width oraz
	ui_screen_height aktualny rozmiar ekranu.

ui_post_init()
	funkcja wywo³ywana po wczytaniu konfiguracji.

ui_deinit()
	pozamykanie wszystkiego.

ui_print(const char *target, const char *line)
	wy¶wietlenie tekstu ,,line'' w oknie ,,target''. póki co, obs³ugi
	okien nie ma, ale kod jest przygotowany tak, ¿e wiadomo¶ci s± ju¿
	wysy³ane w odpowiednie miejsce. przewidziano te¿ dwa specjalne
	okna -- ,,__status'' dla pierwszego okna statusowego oraz
	,,__current'' dla aktualnego. do pierwszego powinny byæ wysy³ane
	informacje dotycz±ce stanu po³±czenia itd, itd, do aktualnego
	wszystko to, co jest zwi±zane z komendami wywo³ywanymi przez
	u¿ytkownika.

ui_beep()
	d¼wiêk. niestety to, jak go wytworzyæ zale¿y od interfejsu. przy
	u¿yciu ncurses zwyk³e putchar('\a') nie zadzia³a.

ui_event(const char *event, ...)
	interfejs u¿ytkownika mo¿e obs³ugiwaæ pewne zdarzenia:
	- "command" (char *cmd, ...) u¿ytkownik wykona³ komendê, aktualnie
	  obs³ugiwana to "query".
	- "my_status" (char *status, char *reason) u¿ytkownik zmieni³
	  stan na "away", "back", "invisible", "private_on", "private_off".
	- "my_status_raw" (int status, char *reason) u¿ytkownik zmieni³
	  stan, podawany w liczbach rozumanych przez protokó³.
	- "connecting" () klient próbuje siê ³±czyæ.
	- "connected" () klient po³±czy³ siê.
	- "disconnected" () klient roz³±czy³ siê lub zosta³ roz³±czony.

ui_loop()
	g³ówna pêtla interfejsu, wywo³ywana zaraz po w³±czeniu klienta.
	powinna wywo³aæ ekg_wait_for_key() przed wywo³aniem funkcji
	czytaj±cej z klawiatury, by w przerwach móc obs³ugiwaæ po³±czenia
	sieciowe. gdy u¿ytkownik wyda jak±¶ komendê, powinna wywo³aæ
	ekg_execute(). je¶li ekg_execute() zwróci 1, funkcja powinna siê
	zakoñczyæ.

// $Id$

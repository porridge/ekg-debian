sk³adnia komendy on:

on [opcje]
	-a, --add <zdarzenie> <numer/alias> <komenda>  dodaje zdarzenie
	-d, --del <numer>|*         usuwa zdarzenie o podanym numerze
	[-l, --list]                wy¶wietla listê zdarzeñ               

	zdarzenie:
		msg, chat - wiadomo¶æ od kogo¶
		query - nowa rozmowa z kim¶
		avail - zmiana przez kogo¶ statusu na 'dostêpny'
		away  -            -//-               'zajêty'
		invisible -        -//-               'niewidoczny'
		disconnect -       -//-	              'niedostêpny'
		descr - zmiana przez kogo¶ swojego opisu
		dcc - otrzymanie od kogo¶ dcc
		sigusr1, sigusr2 - otrzymanie podanego sygna³u
		delivered, queued - wiadomo¶æ dostarczona lub zakolejkowana
		                    na serwerze.
		new_mail - otrzymanie nowej wiadomo¶ci e-mail
		* - wszystkie zdarzenia
	zdarzenia mo¿na ³±czyæ ze sob± operatorem '|' lub przecinkiem.

	numer/alias - nazwa u¿ytkownika z listy lub uin, * oznacza dowolnego 
	              u¿ytkownika, przy czym, je¿eli u¿ytkownik ma przypisan±
                      indywidualn± akcjê - ta z * nie brana jest pod uwagê.
	
	komenda:
		dowolna komenda ekg. dodatkowe dwie komendy dostêpne po
		skompilowaniu z daemonem ioctld:

		blink_leds <sekwencja> - zapalaj kontorlki NumLock, CapsLock
		      i ScrollLock na klawiaturze 'w rytm' podanej sekwencji.
                      kombinacje diod oddzielane s± od siebie przecinkami,
                      je¿eli po kombinacji wyst±pi znak '/' - po nim podany
                      musi byæ odstêp czasu do kolejnej kombinacji.
                      kombinacje tworzy siê dodaj±c do siebie bity:
                      1 - NumLock,  2 - ScrollLock, 4 - CapsLock i tak np.
                      pod¶wietlenie NumLock i CapsLock to 1+4 czyli 5.
		beeps_spk <sekwencja> - odgrywa sekwencjê na sprzêtowym 
                      g³o¶niczku. tony s± oddzielane przecinkami, odstêpy czasu,
                      tak jak przy blink_leds wystêpujê po znaku '/'.

		dodatkowo przy blink_leds i beeps_spk mo¿emy podaæ sekwencjê
		z themu -- zamiast liczb nale¿y podaæ nazwê formatu.

		mo¿na podaæ wiêcej komend, oddzielaj±c je ¶rednikiem.

		je¶li w komendzie wyst±pi %1, jest zastêpowane przez numer sprawcy
		zdarzenia. %2 jest jego pseudonimem, je¶li figuruje w naszej
		li¶cie kontaktów, lub numerkiem w przeciwnym razie. %3
		wystêpuje przy wiadomo¶ciach i zawiera jej tre¶æ. w przypadku 
		zmiany przez kogo¶ opisu, %3 zawiera nowy opis stanu.
		%4 jest tym samym co %3, lecz wszystkie niebezpieczne znaki,
		które mog³yby zostaæ zinterpretowane przez shella zostaj±
		poprzedzone backslashem. u¿ywanie tre¶ci wiadomo¶ci do
		akcji ,,exec'' jest NIEBEZPIECZNE. je¶li naprawdê musisz to
		zrobiæ, u¿yj "%4" (w cudzys³owiach!) pamiêtaj tylko, ¿e
		¿aden program nie jest idealny, wiêc który¶ znak specjalnie
		interpretowany przez shella móg³ zostaæ przypadkowo pominiêty.

komendy blink_leds oraz beeps_spk musz± mieæ dostêp do /dev/console, wiêc
uruchamiany jest specjalny daemon (ioctld) z prawami roota. po wyj¶ciu 
z ekg, daemon ten jest zabijany. aby go w³±czyæ, nale¿y uruchomiæ skrypt
configure z parametrem --enable-ioctld.

przyk³ady:
	on -a msg drg blink_leds 1, 4, 2, 7/20000, 7, 7, 7
	on -a avail|away drg beeps_spk 1000, 900, 800; blink_leds 7, 5, 1
	on -a disconnect kupa msg dupa nic z tego; blink_leds 7
	on -a chat * blink_leds 4, 1, 2
	on -a * * blink_leds $blah.led
	on -a msg|chat * msg %1 nie ma mnie. zostaw wiadomo¶æ.
	on -a sigusr1 * disconnect
	on -a chat jarek echo "/msg szpieg %4" > ~/.gg/innyuser/pipe

$Id$

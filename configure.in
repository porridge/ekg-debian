dnl $Id$

AC_INIT(lib/libgadu.h)

PACKAGE=ekg
VERSION=0.9

AC_CONFIG_HEADER(config.h)

AC_PROG_CC
AC_PROG_INSTALL
AC_PROG_RANLIB

AC_PATH_PROG(GMAKE, gmake, no)
if test "x$GMAKE" = "xno"; then
  AC_PATH_PROG(MAKE, make, no)
  if test "x$MAKE" = "xno"; then
    AC_MSG_ERROR([make ])
  fi
else
  MAKE="$GMAKE"
fi

AC_PATH_PROG(AR, ar, no)
if test "x$AR" = "xno"; then
  AC_MSG_ERROR([ar ])
fi

AC_CHECK_TYPES([int8_t, u_int8_t, int16_t, u_int16_t, int32_t, u_int32_t])
AC_C_BIGENDIAN

AC_SUBST(CFLAGS_LIBGADU)
AC_SUBST(LIBS_LIBGADU)

AC_SUBST(ioctld, "")
AC_SUBST(install_ioctld, "")

AC_SUBST(shared, "")
AC_SUBST(install_shared, "")

AC_SUBST(static, "static")
AC_SUBST(install_static, "install-static")

AC_SUBST(ekg, "")
AC_SUBST(install_ekg, "")
AC_SUBST(clean_ekg, "")
AC_SUBST(distclean_ekg, "")

# najpierw sprawdzamy te opcje, które s± wspólne dla libgadu i ekg.

AC_ARG_WITH(debug, 
  [  --without-debug  	  Compile without debug (-Wall, -ggdb)])

if test "x$with_debug" = "xno"; then 
  CFLAGS="$CFLAGS -DGG_DEBUG_DISABLE"
else
  CFLAGS="$CFLAGS -ggdb" 
fi

AC_CHECK_LIB(nsl, t_accept, LIBS="$LIBS -lnsl")
AC_CHECK_LIB(socket, socket, LIBS="$LIBS -lsocket")

# zachowujemy opcje dla libgadu

CFLAGS_LIBGADU="$CFLAGS"
LIBS_LIBGADU="$LIBS"

# i zaczynamy wykrywaæ ¶mieci dla ekg

if test -d src; then

  AC_ARG_WITH(termcap, 
    [  --without-termcap       Used to force curses/ncurses])

  if test "x$with_termcap" = "xno"; then 
    TERMCAP_LIB=""
  else
    AC_CHECK_LIB(termcap, tgetent, TERMCAP_LIB=-ltermcap)
    LIBS="$LIBS $TERMCAP_LIB"
  fi

  if test "x$TERMCAP_LIB" = "x"; then 
    AC_CHECK_CURSES
    LIBS="$LIBS $CURSES_LIBS"
    CFLAGS="$CFLAGS $CURSES_INCLUDEDIR"
  fi

  AC_CHECK_READLINE

  if test "x$READLINE_LIBS" = "x"; then
    AC_MSG_RESULT([not found])
    AC_MSG_ERROR([You need both readline and readline-devel packages.])
  fi

  LIBS="$LIBS $READLINE_LIBS"
  CFLAGS="$CFLAGS $READLINE_INCLUDES"

  AC_CACHE_CHECK([for rl_set_prompt() in readline], ac_cv_has_rl_set_prompt,
  [AC_TRY_LINK([#include <stdio.h>
#include <readline/readline.h>
], [rl_set_prompt("");], [ac_cv_has_rl_set_prompt=yes], [ac_cv_has_rl_set_prompt=no])])
    if test x"$ac_cv_has_rl_set_prompt" != xno; then
    AC_DEFINE(HAVE_RL_SET_PROMPT)
  fi

  AC_CACHE_CHECK([for rl_filename_completion_function() in readline], ac_cv_has_rl_completion,
  [AC_TRY_LINK([#include <stdio.h>
#include <readline/readline.h>
], [char *x = rl_filename_completion_function("", 0);], [ac_cv_has_rl_completion=yes], [ac_cv_has_rl_completion=no])])
  if test x"$ac_cv_has_rl_completion" != xno; then
    AC_DEFINE(HAVE_RL_COMPLETION)
  fi

  AC_CACHE_CHECK([for rl_get_screen_size() in readline], ac_cv_has_rl_get_screen_size,
  [AC_TRY_LINK([#include <stdio.h>
#include <readline/readline.h>
], [int x,y; rl_get_screen_size(&y,&x);], [ac_cv_has_rl_get_screen_size=yes], [ac_cv_has_rl_get_screen_size=no])])
  if test x"$ac_cv_has_rl_get_screen_size" != xno; then
    AC_DEFINE(HAVE_RL_GET_SCREEN_SIZE)
  fi

  AC_CACHE_CHECK([for rl_set_key() in readline], ac_cv_has_rl_set_key,
  [AC_TRY_LINK([#include <stdio.h>
#include <readline/readline.h>
], [rl_set_key("foo",(void*)0,rl_get_keymap());], [ac_cv_has_rl_set_key=yes], [ac_cv_has_rl_set_key=no])])
  if test x"$ac_cv_has_rl_set_key" != xno; then
    AC_DEFINE(HAVE_RL_SET_KEY)
  fi

  AC_CHECK_LIB(gsm, gsm_decode, [
    AC_CHECK_HEADERS([linux/soundcard.h gsm.h])
    LIBS="$LIBS -lgsm"])

  AC_ARG_WITH(ioctld,
    [  --with-ioctld           Compile with ioctld (Linux only)])

  if test "x$with_ioctld" = "xyes"; then 
    CFLAGS="$CFLAGS -DWITH_IOCTLD -DIOCTLD_PATH=\\\"\$(prefix)/bin/ioctld\\\""
    ioctld="ioctld"
    install_ioctld="install-ioctld"
  fi

  AC_ARG_WITH(shared,
    [  --with-shared           Compile shared version of libgadu])

  if test "x$with_shared" = "xyes"; then 
    shared="shared"
    install_shared="install-shared"
  fi
  ekg="ekg"
  install_ekg="install-ekg"
  clean_ekg="clean-ekg"
  distclean_ekg="distclean-ekg"
else
  shared="shared"
  install_shared="install-shared"
  
  AC_ARG_WITH(static,
    [  --without-static        Don't compile static version of libgadu])

  if test "x$with_static" = "xno"; then
    static=""
    install_static=""
  fi
fi

AC_CONFIG_FILES(Makefile lib/Makefile examples/Makefile)
if test -d src; then
  AC_CONFIG_FILES(src/Makefile)
fi

AC_OUTPUT


